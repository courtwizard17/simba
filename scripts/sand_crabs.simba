program crabs;
{$I WaspLib/osr.simba}

type
  TCrabGUI = record (TScriptForm)
    SingleCheckbox, DoubleCheckbox, TripleCheckbox,
    QuadCheckbox, DebugCheckbox: TLabeledCheckbox;
    BreakForInput, BreakAfterInput: TLabeledEdit;
    FoodInput, PotionInput: TLabeledCombobox;
  end;

  EState = ( RESTOCK, RESET, IDLE, HEAL, BOOST, RETURN, TERMINATE );

var
  InactivityTimer, PotionTimer, CombatTimer, ReportTimer: TStopwatch;
  BreakFor, BreakAfter, StartXP, CurrentXP, GainedXP: Int32;
  SingleSpawn, DoubleSpawn, TripleSpawn, QuadSpawn,
  UsePotions, DebugMode: Boolean;
  Potion, Food: TRSItem;
  RSW: TRSWalker;
  GUI: TCrabGUI;

procedure TCrabGUI.StartScript(Sender: TObject); override;
begin
  SingleSpawn := Self.SingleCheckbox.IsChecked();
  DoubleSpawn := Self.DoubleCheckbox.IsChecked();
  TripleSpawn := Self.TripleCheckbox.IsChecked();
  QuadSpawn := Self.QuadCheckbox.IsChecked();
  DebugMode := Self.DebugCheckbox.IsChecked();
  BreakFor := Self.BreakForInput.GetText().ExtractInteger();
  BreakAfter := Self.BreakAfterInput.GetText().ExtractInteger();
  Food := Self.FoodInput.GetText();
  Potion := (Self.PotionInput.GetText() + "(4)");
  inherited;
end;

procedure PauseTimer(Task: PBreakTask);
var
  t: PBreakTask;
begin
  InactivityTimer.Pause;
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var
  t: PBreakTask;
begin
  InactivityTimer.Resume;
  T := Task;
end;

procedure TAntiban.DoLoseFocus();
begin
  Self.LoseFocus(SRL.NormalRange(450, 2750));
end;

procedure WriteDebug(Message: String);
begin
  WriteLn(SRL.TimeStamp(), ':[Script]: ', Message);
end;

procedure SetupAntiban();
begin
  Antiban.Skills := [ERSSKILL.HITPOINTS, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE*2,   @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE*6,   @Antiban.HoverMSPlayers);
  Antiban.AddTask(ONE_MINUTE*3,   @Antiban.DoLoseFocus);
  Antiban.AddTask(ONE_MINUTE*7,   @Antiban.RandomRotate);
  Antiban.AddTask(ONE_MINUTE*8,   @Antiban.HoverMSNPCs);
  Antiban.AddTask(ONE_MINUTE*25,  @Antiban.HoverSkills);
  Antiban.AddBreak(BreakAfter * ONE_MINUTE, BreakFor * ONE_MINUTE, 0.3, 1);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure CalculateXP();
var
  TempValue: Int32;
begin
  CurrentXP := XPBar.Read();
  TempValue := GainedXP;
  GainedXP  := (CurrentXP - StartXP);

  if GainedXP > TempValue then
    InactivityTimer.Reset();

  if InactivityTimer.ElapsedTime() > 300000 then
    TerminateScript('No Gained XP in 5 mins, stopping!');
end;

procedure PrintProgress();
var
  Hours: Double;
  Total, Hourly: String;
begin
  if ReportTimer.ElapsedTime() < 60000 then
    Exit();

  Hours := (GetTimeRunning()/3600000);
  Total := ToStr(Round((GainedXP/1000), 0), ' k ');
  Hourly := ToStr('(', Round((GainedXP/(Hours*1000)), 1), ' k / hr)');
  WriteLn(SRL.TimeStamp(), ':[Experience]: ', Total, Hourly);

  ReportTimer.Reset();
end;

procedure InitiateScript();
begin
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();

  WaitUntil(RSClient.IsLoggedIn(), 250, 12000);

  StartXP := XPBar.Read();

  if StartXP < 1 then
    TerminateScript('Failed to read XP, make sure XPBar is set up!');

  Options.SetZoomLevel(Random(10, 16));

  RSW.SetupRegion([6000, 2200, 8000, 5000], 2);
  SetupAntiban();

  if Potion = '(4)' then
  begin
    WriteDebug('Starting without potions.');
    UsePotions := False;
  end else
  begin
    WriteDebug(ToStr('Potion: ' + Potion));
    UsePotions := True;
  end;

  Mouse.Speed := SRL.NormalRange(11, 18);

  InactivityTimer.Start();
  ReportTimer.Start();
end;

function GetState(): EState;
var
  Pos: TPoint;
begin
  if not RSClient.IsLoggedIn() then
    Exit(IDLE);

  if not Inventory.ContainsItem(Food) then
    Exit(RESTOCK);

  if Minimap.GetHPPercent() < SRL.NormalRange(40, 60) then
    Exit(HEAL);


end;

procedure ScriptLoop();
var
  State: EState;
begin
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();

  State := GetState();
  CalculateXP();
  PrintProgress();

  if DebugMode then
    WriteDebug(ToStr('State: ', State));

  case State of
    TERMINATE: TerminateScript();
    RESTOCK: Wait(1000);
    RETURN: Wait(1000);
    RESET: Wait(1000);
    BOOST: Wait(1000);
    IDLE: Wait(1000);
    HEAL: Wait(1000);
  end;

  Antiban.DoAntiban(False, False);
  WaitEx(100, 95);
end;

procedure TCrabGUI.Run(); override;
var
  Tab: TTabSheet;
begin
  Self.Setup('Sand Crabs', Point(800, 500), False);
  Self.Start.SetOnClick(@Self.StartScript);
  Self.AddTab('Settings');
  Tab := Self.GetTab('Settings');

  with Self.BreakAfterInput do
  begin
    Create(Tab);
    SetLeft(TControl.AdjustToDPI(30));
    SetTop(TControl.AdjustToDPI(160));
    SetCaption('Break After:');
    SetText('60');
  end;

  with Self.BreakForInput do
  begin
    Create(Tab);
    SetLeft(TControl.AdjustToDPI(30));
    SetTop(TControl.AdjustToDPI(200));
    SetCaption('Break For:');
    SetText('20');
  end;

  with Self.SingleCheckbox do
  begin
    Create(Tab);
    SetCaption('Use spots with one crab spawn');
    SetLeft(TControl.AdjustToDPI(380));
    SetTop(TControl.AdjustToDPI(160));
  end;

  with Self.DoubleCheckbox do
  begin
    Create(Tab);
    SetCaption('Use spots with two crab spawns');
    SetLeft(TControl.AdjustToDPI(380));
    SetTop(TControl.AdjustToDPI(190));
  end;

  with Self.TripleCheckbox do
  begin
    Create(Tab);
    SetCaption('Use spots with three crab spawns');
    SetLeft(TControl.AdjustToDPI(380));
    SetTop(TControl.AdjustToDPI(220));
  end;

  with Self.QuadCheckbox do
  begin
    Create(Tab);
    SetCaption('Use spots with four crab spawns');
    SetLeft(TControl.AdjustToDPI(380));
    SetTop(TControl.AdjustToDPI(250));
  end;

  with Self.DebugCheckbox do
  begin
    Create(Tab);
    SetCaption('Run in debug mode');
    SetLeft(TControl.AdjustToDPI(380));
    SetTop(TControl.AdjustToDPI(280));
  end;

  with Self.FoodInput do
  begin
    Create(Tab);
    SetCaption('Food');
    SetLeft(TControl.AdjustToDPI(30));
    SetTop(TControl.AdjustToDPI(250));
    AddItemArray(["Salmon", "Tuna", "Lobster", "Shark", "Manta ray"]);
    SetItemIndex(0);
  end;

  with Self.PotionInput do
  begin
    Create(Tab);
    SetCaption('Potion');
    SetLeft(TControl.AdjustToDPI(30));
    SetTop(TControl.AdjustToDPI(300));
    AddItemArray(["Super combat potion", "Super attack", "Super strength", "Attack potion"]);
  end;

  Self.CreateAccountManager(Tab);
  inherited;
end;

begin
  GUI.Run();
  //InitiateScript();

  Writeln("Single Spots: ", SingleSpawn);
  Writeln("Double Spots: ", DoubleSpawn);
  Writeln("Triple Spots: ", TripleSpawn);
  Writeln("Quadra Spots: ", QuadSpawn);
  WriteLn(BreakFor);
  WriteLn(BreakAfter);
  WriteLn(Food);
  WriteLn(Potion);

  //repeat
  //  ScriptLoop();
  //until False;
end.