program cooker;
{$I WaspLib/osr.simba}

begin
  Login.PlayerIndex := 0;
  ItemFinder.Similarity := 0.999999;
end;

type
  COOKLOCATION = ( TRAWLER, HOSIDIUS );

var
  Location: COOKLOCATION := COOKLOCATION.TRAWLER;
  RawFoods: TRSItemArray := [ 'Raw anchovies', 'Raw shrimps', 'Raw trout', 'Raw salmon', 'Raw tuna',
                              'Raw lobster', 'Raw bass', 'Raw swordfish', 'Raw monkfish', 'Raw shark',
                              'Raw sea turtle', 'Raw manta ray', 'Raw karambwan' ];
  RSW: TRSWalker;
  Timer, ReportTimer: TStopwatch;
  StartXP, CurrentXP, GainedXP: Int32;
  OvenObj, BankObj: TRSObject;

procedure PauseTimer(Task: PBreakTask);
var
  t: PBreakTask;
begin
  Timer.Pause();
  t := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var
  t: PBreakTask;
begin
  Timer.Resume();
  t := Task;
end;

function Fantiban(): Boolean;
begin
  Antiban.DoAntiban(False, False);
  Result := False;
end;

procedure CalculateXP();
var
  t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := (CurrentXP - StartXP);

  if GainedXP > t then
    Timer.Reset();

  if Timer.ElapsedTime > 300000 then
    TerminateScript('No Gained XP in 5 minutes!');
end;

procedure PrintProgress();
var
  hrs: Double;
  s1, s3: String;
begin
  hrs := (GetTimeRunning()/3600000);
  s1 := ToStr(Round((GainedXP/1000), 0), ' k ');
  s3 := ToStr('(', Round((GainedXP/(hrs*1000)), 1), ' k / hr)');
  WriteLn(SRL.TimeStamp(), ':[Experience]: ', s1, s3);
  ReportTimer.Reset();
end;

procedure TAntiban.DoLoseFocus();
begin
  Self.LoseFocus(SRL.NormalRange(800,3500));
end;

procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(300, 1900);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;

procedure SetupAntiban();
begin
  Antiban.Skills := [ERSSKILL.COOKING, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE*2,   @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE*5,   @Antiban.HoverMSPlayers);
  Antiban.AddTask(ONE_MINUTE*3,   @Antiban.DoLoseFocus);
  Antiban.AddTask(ONE_MINUTE*7,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE*8,   @Antiban.HoverMSNPCs);
  Antiban.AddTask(ONE_MINUTE*25,  @Antiban.HoverSkills);
  Antiban.AddBreak(77 * ONE_MINUTE, 8 * ONE_MINUTE, 0.3, 1);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure InitiateScript();
begin
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();

  WaitUntil(RSClient.IsLoggedIn(), 250, 12000);
  StartXP := XPBar.Read();

  if StartXP < 1 then
    TerminateScript('Failed to read XP, make sure XPBar is set up!');

  Options.SetNPCAttackOption(ERSAttackOption.HIDDEN);
  Options.SetZoomLevel(Random(0, 6));
  RSW.Setup();
  SetupAntiban();

  if Location = COOKLOCATION.TRAWLER then
  begin
    BankObj.SetupUpText(['chest']);
    BankObj.Setup(2, [[6036, 3796]]);
    BankObj.Finder.Colors += CTS2(3688797, 9, 0.05, 0.05);
    OvenObj.SetupUpText(['Cook']);
    OvenObj.Setup(2, [[6040, 3828]]);
    OvenObj.Finder.Colors += CTS2(4634072, 8, 0.10, 2.12);
  end
  else if Location = COOKLOCATION.HOSIDIUS then
  begin
    BankObj.SetupUpText(['chest']);
    BankObj.Setup(2, [[2092, 2000]]);
    BankObj.Finder.Colors += CTS2(1985116, 8, 0.04, 1.39);
    OvenObj.SetupUpText(['Cook', 'Clay']);
    OvenObj.Setup(2, [[2100, 1972]]);
    OvenObj.Finder.Colors += CTS2(4803172, 23, 0.03, 0.65);
  end
  else
    TerminateScript('Tried to start without a supported location.');

  Timer.Start();
  ReportTimer.Start();
end;

procedure Cook();
begin
  if OvenObj.Click() then
  begin
    WaitUntil(Make.IsOpen(), 200, 8000);

    if not Make.IsOpen() then
      Exit();

    Make.Select(0, Make.QUANTITY_ALL, True);
    WaitUntil(Fantiban() or not Inventory.ContainsAny(RawFoods), 200, 75000);
  end else if SRL.Dice(50) then
    Antiban.RandomRotate()
  else
    KeyboardRotate();
end;

procedure Restock();
var
  i: Int32;
  BankItem: TRSBankItem;
begin
  if BankObj.Click() then
  begin
    WaitUntil(Bank.IsOpen(), 200, 8000);

    if not Bank.IsOpen() then
      Exit();

    Bank.DepositAll();
    WaitEx(250, 225);

    for i := 0 to High(RawFoods) do
      if Bank.ContainsItem(RawFoods[i]) then
        Break;

    BankItem := [RawFoods[i], Bank.QUANTITY_ALL, False];
    Bank.WithdrawItem(BankItem, False);
    WaitEx(250, 25);
    Bank.Close(20);
    WaitEx(250, 25);
  end else if SRL.Dice(50) then
    Antiban.RandomRotate()
  else
    KeyboardRotate();
end;

begin
  InitiateScript();
  repeat
    begin
      Antiban.DoAntiban();

      if not RSClient.IsLoggedIn() then
        Login.LoginPlayer();

      CalculateXP();

      if Inventory.ContainsAny(RawFoods) then
        Cook()
      else
        Restock();

      if ReportTimer.ElapsedTime > 60000 then
        PrintProgress();

      WaitEx(225, 200);
    end;
  until false;
end.