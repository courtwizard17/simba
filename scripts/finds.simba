program findz;
{$I WaspLib/osr.simba}

begin
  Login.PlayerIndex := 0;
end;

const
  BREAKAFTER  = 55;
  BREAKFOR    = 5;
  LAMPSKILL   = ERSLampSkill.SLAYER;

type
  EState = (USE_LAMP, DEPOSIT, DROP_JUNK, CLEAN_FINDS, GET_FINDS);

var
  RSW: TRSWalker;
  Timer: TStopwatch;
  StartXP, CurrentXP, GainedXP: Int32;
  DropArray: TRSItemArray := [ 'Broken arrow', 'Broken glass', 'Iron dagger',
                               'Uncut jade', 'Bones', 'Bowl', 'Pot',
                               'Bronze limbs', 'Wooden stock', 'Coal',
                               'Tin ore', 'Copper ore', 'Mithril ore',
                               'Big bones', 'Iron ore', 'Uncut opal' ];
  DepositArray: TRSItemArray := [ 'Pottery', 'Jewellery', 'Old chipped vase', 'Arrowheads' ];


function Fantiban(): Boolean;
begin
  Antiban.DoAntiban(False, False);
  Result := False;
end;

procedure PauseTimer(Task: PBreakTask);
var
  T: PBreakTask;
begin
  Timer.Pause();
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var
  T: PBreakTask;
begin
  Timer.Resume();
  T := Task;
end;

procedure CalculateXP();
var
  t: Int32;
begin
  if StartXP < 1 then
    StartXP := XPBar.Read();
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if GainedXP > t then
    Timer.Reset();
  if Timer.ElapsedTime > 3000000 then
    TerminateScript('No Gained XP in 50 minutes!');
end;

procedure PrintProgress();
begin
  CalculateXP();
  WriteLn();
  WriteLn('|-------------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Gained XP      : ', Round((GainedXP/1000), 2), ' K');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((3000000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('|-------------------------------|');
  WriteLn();
end;

procedure GetUncleanedFinds();
var
  Pile: TPoint := [8444, 2664];
  Rect: TRectangle;
  Pt: TPoint;
  Box: TBox;
begin
  Rect := RSW.GetTileMS(Pile);
  Box := Rect.Bounds().Expand(-6);
  Pt := SRL.rowp(Mouse.Position(), Box);
  Mouse.HumanMove(Pt);

  if not Mainscreen.IsUpText('rocks') then
    Exit();

  Mouse.Click(MOUSE_LEFT);
  WaitUntil(Inventory.IsFull(), 250, 62350);
end;

function IsDepositInterfaceOpen(): Boolean;
var
  InterfaceString: String := Chat.GetChatTitle();
begin
  Result := InterfaceString.Contains('Finds placed');
end;

procedure UseCleaningTable();
var
  Pile: TPoint := [8440, 2676];
  Rect: TRectangle;
  Box: TBox;
  Pt: TPoint;
begin
  Rect := RSW.GetTileMS(Pile);
  Box  := Rect.Bounds();
  Pt   := SRL.Rowp(Mouse.Position(), Box);
  Mouse.HumanMove(Pt);

  if not Mainscreen.IsUpText('table') then
    Exit();

  Mouse.Click(MOUSE_LEFT);
  WaitUntil(Fantiban() or not Inventory.ContainsItem('Uncleaned find'), 250, 82450);
end;

function ClickStorageCrate(): Boolean;
var
  Loc: TPoint := [8456, 2680];
  Pt : TPoint;
  Rect: TRectangle;
  Box: TBox;

begin
  Rect := RSW.GetTileMS(Loc);
  Box := Rect.Bounds().Expand(-6);
  Pt := SRL.Rowp(Mouse.Position(), Box);
  Mouse.HumanMove(Pt);

  if not Mainscreen.IsUpText('crate') then
    Exit(False);

  Mouse.Click(MOUSE_LEFT);
  WaitUntil(IsDepositInterfaceOpen(), 250, 5000);
  Exit(True);
end;

function ShouldDeposit(): Boolean;
var
  i, ItemCount: Int32;
begin
  ItemCount := 0;

  for i := Low(DepositArray) to High(DepositArray) do
    ItemCount += Inventory.CountItem(DepositArray[i]);

  Result := ItemCount > 8;
end;

procedure SetupAntiban();
begin
  Antiban.Skills := [ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE, 0.3, 1);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure Initiate();
begin
  RSW.Setup();
  SetupAntiban();

  if not RSClient.IsLoggedIn then
    Login.LoginPlayer();

  WaitUntil(RSClient.IsLoggedIn, 100, 10000);
  LampHandler.Setup(LAMPSKILL);
  StartXP := XPBar.Read();
  Timer.Start();
end;

procedure DepositItems();
begin
  if IsDepositInterfaceOpen() then
  begin
    Chat.ClickOption('Yes, place all my finds in the crate.');
    WaitUntil(Fantiban() or not Inventory.ContainsAny(DepositArray), 250, 22000);
  end
  else
    ClickStorageCrate();
end;

function GetState: EState;
begin
  if Inventory.ContainsItem('Antique lamp') then
    Exit(USE_LAMP);

  if ShouldDeposit then
    Exit(DEPOSIT);

  if Inventory.ContainsAny(DropArray) then
    Exit(DROP_JUNK);

  if Inventory.ContainsItem('Uncleaned find') then
    if Inventory.IsFull() then
      Exit(CLEAN_FINDS);

  Exit(GET_FINDS);
end;

procedure UseLamp();
begin
  if LampHandler.Open() then
    LampHandler.SelectLampSkill();
end;

procedure Loop();
begin
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();

  Antiban.DoAntiban();
  PrintProgress();

  case GetState() of
    CLEAN_FINDS: UseCleaningTable();
    DROP_JUNK: Inventory.ShiftDrop(DropArray, DROP_PATTERN_SNAKE);
    GET_FINDS: GetUncleanedFinds();
    USE_LAMP: UseLamp();
    DEPOSIT: DepositItems();
  end;

  Antiban.BioWait(125);
end;

begin
  Initiate();

  repeat
    Loop();
  until false;
end.
